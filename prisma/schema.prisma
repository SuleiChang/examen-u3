// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id        Int    @id @default(autoincrement())
  nombres   String
  email     String @unique
  direccion String
  fono      String
}

model Person {
  nPerCode       String   @id @default(uuid()) @db.Uuid
  cPerLastname   String   @db.VarChar(50)
  cPerName       String   @db.VarChar(50)
  cPerAddress    String   @db.VarChar(100)
  cPerDateBorn   DateTime @db.Date
  nPerYears      Int      @db.SmallInt
  nPerSalary     Float    @db.Real
  cPerRnd        String   @db.VarChar(50)
  cPerState      String   @db.VarChar(1)
  cPerSexo       String   @db.VarChar(15)
  remember_token String   @db.VarChar(100)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
}

model Category {
  id          Int       @id @default(autoincrement()) @db.Integer
  name        String    @db.VarChar(50)
  description String?   @db.VarChar(255)
  services    Service[]
}

model Service {
  id          Int       @id @default(autoincrement()) @db.Integer
  name        String    @db.VarChar(50)
  description String    @db.VarChar(150)
  categoryId  Int?
  category    Category? @relation(fields: [categoryId], references: [id])
}

model Contact {
  id          Int    @id @default(autoincrement()) @db.Integer
  name        String @db.VarChar(20)
  email       String @db.VarChar(50)
  mailSubject String @db.VarChar(50)
  mailMessage String @db.VarChar(255)
}

model User {
  id       String @id @default(uuid()) @db.Uuid
  username String @unique @db.VarChar(50)
  email    String @unique @db.VarChar(100)
  password String @db.VarChar(255)
}

model ActivityLog {
  id        String   @id @default(uuid()) @db.Uuid
  action    String   @db.VarChar(50)
  imageId   String   @db.Uuid
  imageName String   @db.VarChar(100)
  timestamp DateTime @default(now())
  image     Image    @relation(fields: [imageId], references: [id])
}

model Image {
  id           String        @id @default(uuid()) @db.Uuid
  name         String        @db.VarChar(100)
  imageUrl     String        @db.VarChar(255)
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  activityLogs ActivityLog[]
}
